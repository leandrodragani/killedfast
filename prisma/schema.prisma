datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
  id        String    @id @unique
  email     String    @unique
  name      String?
  products  Product[]
  profile   Profile?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
}

model Profile {
  id           Int     @id @default(autoincrement())
  bio          String?
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
  profileImage String?
  xAccount     String?
}

enum ProductStatus {
  DEAD
  ALMOST_DEAD
  BARELY_ALIVE
  ALIVE
}

model Product {
  id                        Int           @id @default(autoincrement())
  name                      String
  slogan                    String        @db.Text
  description               String        @db.Text
  author                    User          @relation(fields: [authorId], references: [id])
  authorId                  String
  category                  Category      @relation(fields: [categoryId], references: [id])
  categoryId                Int
  tags                      ProductTag[]
  comments                  Comment[]
  createdAt                 DateTime      @default(now())
  updatedAt                 DateTime      @updatedAt
  website                   String?
  slug                      String
  lessonsLearned            String?       @db.Text
  status                    ProductStatus
  dateOfCreation            DateTime
  dateOfDeath               DateTime?
  numberOfUsers             Int?
  resourceUrls              ResourceURL[]
  reasonForFailure          String?       @db.Text
  keyChallenges             String?       @db.Text
  whatWouldYouDoDifferently String?       @db.Text
  tipsOrAdvice              String?       @db.Text

  @@index([authorId])
  @@index([categoryId])
  @@fulltext([slug])
}

model ResourceURL {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String   @db.Text
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
  @@index([authorId])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  products    Product[]
  slug        String
}

model Tag {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  products ProductTag[]
  slug     String       @unique
}

model ProductTag {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int

  @@id([productId, tagId])
  @@unique([productId, tagId])
  @@index([tagId])
}
